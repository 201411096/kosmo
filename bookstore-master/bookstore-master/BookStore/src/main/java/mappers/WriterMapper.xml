<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WriterDAO">
   <!-- mybatis 자료형 : int / hashmap / string -->
   
	<!--    저자등록 : 저자명 -->
	<insert id="insertWriter" parameterType="writer">
	INSERT INTO WRITER (WRITER_ID, WRITER_NAME)
	VALUES(writer_id_seq.nextval, #{writerName})
	</insert>
	
	<select id="selectWriterByWriterId" parameterType="writer" resultType="writer">
	SELECT WRITER_ID, WRITER_NAME
	FROM writer
	WHERE WRITER_ID=#{writerId}
	</select>
	
	<!--    저자출력 : 저자명 -->
	<select id="selectWriter" parameterType="writer" resultType="writer">
	SELECT WRITER_ID, WRITER_NAME
	FROM writer
	ORDER BY WRITER_ID ASC
	</select>
	<!--    저자출력 : 저자명 + 저자명으로 검색 -->
	<select id="selectWriterSearchByName" parameterType="string" resultType="writer">
	SELECT WRITER_ID, WRITER_NAME
	FROM writer
	where REGEXP_LIKE (WRITER_NAME, '(*)'||#{searchWord}||'(*)')
	ORDER BY WRITER_ID ASC
	</select>
	
<!--    저자출력 : 저자명 + 저자명으로 검색 + 페이징 -->
	<select id="selectWriterSearchByNameWithPaging" parameterType="hashmap" resultType="writer">
	<![CDATA[
	    select *
	    from (
			SELECT WRITER_ID, WRITER_NAME, ROWNUM AS RNUM
			FROM writer
			where REGEXP_LIKE (WRITER_NAME, '(*)'||#{searchWord}||'(*)')
			ORDER BY WRITER_ID ASC
		) where RNUM>=#{startRow} and RNUM<=#{endRow}
	]]>
	</select>
	<!--    저자출력 : 저자명 + 저자명으로 검색 + 페이징 -->
	<select id="selectWriterCntByNameWithPaging" parameterType="string" resultType="int">
	<![CDATA[
	    select count(*)
	    from (
			SELECT WRITER_ID, WRITER_NAME
			FROM writer
			where REGEXP_LIKE (WRITER_NAME, '(*)'||#{searchWord}||'(*)')
			ORDER BY WRITER_ID ASC
		)
	]]>
	</select>
	
	<!-- 수정 -->
	<update id="updateWriter" parameterType="writer" >
		UPDATE writer
		SET writer_name = #{writerName}
		WHERE writer_id = #{writerId}
	</update>

	<!-- 삭제  -->
	<delete id="deleteWriter" parameterType="writer">
		DELETE
		FROM writer
		WHERE writer_id = #{writerId}
	</delete>
</mapper>   